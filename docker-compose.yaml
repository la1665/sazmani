version: "3.9"
services:
  db:
    image: postgres:15.4
    container_name: sazman_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_LOG_STATEMENT: all
    ports:
      - "5432:5432"
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d

  redis:
    image: redis:6.2.13-alpine
    container_name: sazman_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning

  meilisearch:
    image: getmeili/meilisearch:v1.7
    container_name: sazman_meilisearch
    restart: always
    ports:
      - "7700:7700"
    volumes:
      - meili_data:/meili_data
    env_file:
      - ./backend/.env # Using the same env file as backend
    environment:
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
      - MEILI_ENV=production

  backend:
    build:
      context: ./backend
    container_name: sazman_backend
    restart: on-failure
    command: >
      uvicorn main:app_socket
      --host 0.0.0.0
      --port 8000
      --workers 1
      --log-level debug
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./backend/certs:/app/certs
    environment:
      - PYTHONUNBUFFERED=1
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - db
      # - meilisearch
      # - redis

  nats_service:
    build:
      context: ./backend
    container_name: sazman_nats_consumer
    restart: always
    command: ["python", "nats_microservice.py"]
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    env_file:
      - ./backend/.env
    environment:
      PYTHONUNBUFFERED: 1
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - db
      - backend

  frontend:
    image: nginx:1.22
    container_name: sazman_frontend
    restart: on-failure
    volumes:
      - ./frontend/build/web:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./uploads:/app/uploads
    command: sh -c "chmod -R 755 /app/uploads && nginx -g 'daemon off;'"
    ports:
      - "80:80"
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - backend

  # opensearch:
  #   image: opensearchproject/opensearch:latest
  #   container_name: opensearch
  #   environment:
  #     - discovery.type=single-node
  #     - bootstrap.memory_lock=true
  #     - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
  #     - "OPENSEARCH_INITIAL_ADMIN_PASSWORD=admin"
  #   ports:
  #     - "9200:9200"
  #   volumes:
  #     - opensearch-data:/usr/share/opensearch/data

  # opensearch-dashboards:
  #   image: opensearchproject/opensearch-dashboards:latest
  #   container_name: opensearch-dashboards
  #   ports:
  #     - "5601:5601"
  #   environment:
  #     - OPENSEARCH_HOSTS=http://opensearch:9200
  #   depends_on:
  #     - opensearch

volumes:
  # opensearch-data:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  meili_data:
    driver: local
# alembic:
#   build:
#     context: ./backend
#   container_name: sazman_alembic
#   restart: on-failure
#   depends_on:
#     - db
#   volumes:
#     - ./backend:/app
#   env_file:
#     - ./backend/.env
#   command: alembic upgrade head
